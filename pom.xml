<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.mnode.base</groupId>
		<artifactId>base-parent</artifactId>
		<version>0.0.3</version>
	</parent>
	<groupId>org.mnode.figurate</groupId>
	<artifactId>figurate</artifactId>
	<name>Figurate</name>
	<version>0.0.2-SNAPSHOT</version>
	<description>Configuration editor</description>
	<url>http://figurate.org</url>
	<repositories>
		<repository>
			<id>modularity-releases</id>
			<name>Modularity Releases</name>
			<url>http://m2.modularity.net.au/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>micronode-releases</id>
			<name>Micronode Releases</name>
			<url>http://build.mnode.org/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>micronode-snapshots</id>
			<name>Micronode Snapshots</name>
			<url>http://build.mnode.org/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
	        <id>seaglasslookandfeel</id>
	        <name>Sea Glass Look and Feel Repository</name>
	        <url>http://seaglass.googlecode.com/svn/repo</url>
	    </repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.mnode.base</groupId>
			<artifactId>base-commons</artifactId>
			<version>0.0.1</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.mnode.base</groupId>
			<artifactId>base-desktop</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		 -->
		<dependency>
	        <groupId>org.codehaus.groovy</groupId>
	        <artifactId>groovy-all</artifactId>
    	</dependency>
		<!-- 
		<dependency>
			<groupId>net.java.dev.substance</groupId>
			<artifactId>substance</artifactId>
			<version>6.0</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.substance</groupId>
			<artifactId>substance-swingx</artifactId>
			<version>6.0</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.datatips</groupId>
			<artifactId>datatips</artifactId>
			<version>20091219</version>
		</dependency>
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>jxlayer</artifactId>
			<version>3.0.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.java.dev.substance</groupId>
			<artifactId>swingx</artifactId>
			<version>6.0</version>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm-all</artifactId>
			<version>2.2.3</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.java.dev.substance</groupId>
			<artifactId>trident</artifactId>
			<version>6.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		 -->
		<dependency>
			<groupId>org.mnode.ousia</groupId>
			<artifactId>ousia</artifactId>
			<version>0.0.2-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>jpathwatch</groupId>
			<artifactId>jpathwatch</artifactId>
			<version>0.93-rc1</version>
		</dependency>
        <dependency>
            <groupId>com.fifesoft</groupId>
            <artifactId>autocomplete</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fifesoft</groupId>
            <artifactId>spellchecker</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.mnode.figurate</groupId>
        	<artifactId>english_dic</artifactId>
        	<version>1.0</version>
        	<type>zip</type>
        	<scope>runtime</scope>
        </dependency>
        <dependency>
        	<groupId>com.fifesoft</groupId>
        	<artifactId>rsyntaxtextarea</artifactId>
        </dependency>
        <dependency>
        	<groupId>net.sourceforge.mydoggy</groupId>
        	<artifactId>mydoggy-api</artifactId>
        	<version>1.4.2</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>net.sourceforge.mydoggy</groupId>
        	<artifactId>mydoggy-plaf</artifactId>
        	<version>1.4.2</version>
        	<type>jar</type>
        	<scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>mydoggy-api</artifactId>
                    <groupId>org.noos.xing</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>mydoggy-res</artifactId>
                    <groupId>org.noos.xing</groupId>
                </exclusion>
                <!-- 
                <exclusion>
                	<artifactId>TableLayout</artifactId>
                	<groupId>tablelayout</groupId>
                </exclusion>
                 -->
            </exclusions>
        </dependency>
        <dependency>
        	<groupId>net.sourceforge.mydoggy</groupId>
        	<artifactId>mydoggy-res</artifactId>
        	<version>1.4.2</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>eu.medsea.mimeutil</groupId>
        	<artifactId>mime-util</artifactId>
        	<version>2.1.3</version>
        	<scope>compile</scope>
        	<exclusions>
        		<exclusion>
        			<artifactId>slf4j-log4j12</artifactId>
        			<groupId>org.slf4j</groupId>
        		</exclusion>
        		<exclusion>
        			<artifactId>log4j</artifactId>
        			<groupId>log4j</groupId>
        		</exclusion>
        	</exclusions>
        </dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>substance</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>substance-swingx</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>swingx</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.substance</groupId>
            <artifactId>trident</artifactId>
        </dependency>
        <dependency>
            <groupId>eu.kostia.gtkjfilechooser</groupId>
            <artifactId>gtkjfilechooser</artifactId>
            <version>1.4.8</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.flamingo</groupId>
            <artifactId>flamingo</artifactId>
            <version>5.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-swing</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>0.9.28</version>
        </dependency>
	</dependencies>
	<scm>
		<connection>scm:hg:https://figurate.googlecode.com/hg/</connection>
		<developerConnection>scm:hg:https://figurate.googlecode.com/hg/</developerConnection>
	</scm>

	<build>
		<plugins>

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
            </plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
					    <manifest>
					       <addClasspath>true</addClasspath>
					    </manifest>
						<manifestEntries>
							<SplashScreen-Image>splash.png</SplashScreen-Image>
                            <Main-Class>org.mnode.figurate.Figurate</Main-Class>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo.webstart
				</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>deploy</phase>
						<goals>
							<goal>jnlp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--outputDirectory></outputDirectory--> <!-- not required?? -->
					<!--
						Set to true to exclude all transitive dependencies. Default is
						false.
					-->
					<excludeTransitive>false</excludeTransitive>
					<!--
						The path where the libraries are stored within the jnlp structure.
						not required. by default the libraries are within the working
						directory
					-->
					<libPath>lib</libPath>
					<!--
						[optional] transitive dependencies filter - if omitted, all
						transitive dependencies are included
					-->
					<dependencies>
						<!--
							Note that only groupId and artifactId must be specified here.
							because of a limitation of the Include/ExcludesArtifactFilter
						-->
						<!--
							<includes> <include>net.modularity.core:desktop</include>
							<include>net.modularity.core:xmpp</include>
							<include>net.modularity.core:mail</include>
							<include>net.modularity.core:calendar</include>
							<include>net.modularity.core:logging</include>
							<include>commons-lang:commons-lang</include> </includes>
						-->
						<!--
							excludes> <exclude></exclude> <excludes -->
					</dependencies>

					<resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory>

					<!-- default value -->

					<!-- JNLP generation -->
					<jnlp>
						<!-- default values -->
						<!--
							inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath -->
						<!--inputTemplate>src/main/jnlp/template.vm</inputTemplate--> <!-- relative to inputTemplateResourcePath -->
						<!-- defaults to launch.jnlp -->
						<!-- 
						<outputFile>views.jnlp</outputFile>
						 -->
						<!--
							used to automatically identify the jar containing the main class.
						-->
						<!-- this is perhaps going to change -->
						<mainClass>org.mnode.figurate.Figurate</mainClass>
                        <j2seVersion>1.6+</j2seVersion>
					</jnlp>


					<!-- SIGNING -->
					<!--
						defining this will automatically sign the jar and its
						dependencies, if necessary
					-->
					<sign>
						<keystore>micronode</keystore>
						<keypass>!modular1</keypass>
						<!--
							we need to override passwords easily from the command line.
							${keypass}
						-->
						<storepass>!modular1</storepass> <!-- ${storepass} -->
						<!--storetype>fillme</storetype-->
						<alias>webstart</alias>

						<!-- only required for generating the keystore -->
						<storetype>jks</storetype>
						<validity>365</validity>
						<dnameCn>Ben Fortuna</dnameCn>
						<dnameOu>Figurate</dnameOu>
						<dnameO>Micronode</dnameO>
						<dnameL>Melbourne</dnameL>
						<dnameSt>Victoria</dnameSt>
						<dnameC>AU</dnameC>
						<verify>false</verify> <!-- verify that the signing operation succeeded -->

						<!-- KEYSTORE MANAGEMENT -->
						<keystoreConfig>
							<delete>true</delete> <!-- delete the keystore -->
							<gen>true</gen>       <!-- optional shortcut to generate the store. -->
						</keystoreConfig>
					</sign>
					<unsignAlreadySignedJars>true</unsignAlreadySignedJars>

					<!-- BUILDING PROCESS -->
					<pack200>true</pack200>
					<gzip>true</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->
					<!--
						causes a version attribute to be output in each jar resource
						element, optional, default is false
					-->
					<!-- 
					<outputJarVersions>true</outputJarVersions>
					 -->

					<!--install>false</install--> <!-- not yet supported -->
					<verbose>true</verbose>
				</configuration>
			</plugin>

			<!-- Deploy webstart -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>deploy</phase>
						<configuration>
							<tasks>
								<scp file="target/${pom.build.finalName}.zip" todir="modularity@mnode.org:figurate.org" keyfile="${user.home}/.ssh/id_rsa" passphrase="" />

								<sshexec host="mnode.org" username="modularity" keyfile="${user.home}/.ssh/id_rsa" passphrase="" command="rm -rf figurate.org/webstart/*; unzip -o figurate.org/${pom.build.finalName}.zip -d figurate.org/webstart" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/bin.xml</descriptor>
                        <descriptor>src/main/assembly/src.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>site-deploy</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 
            <plugin>
            	<groupId>org.bluestemsoftware.open.maven.plugin</groupId>
            	<artifactId>launch4j-plugin</artifactId>
            	<version>1.5.0.0</version>
			      <executions>
			        <execution>
			          <id>launch4j</id>
			          <phase>verify</phase>
			          <goals>
			            <goal>launch4j</goal>
			          </goals>
			          <configuration>
			            <dontWrapJar>true</dontWrapJar>
			            <headerType>gui</headerType>
			            <outfile>target/figurate.exe</outfile>
			            <jar>../lib/${pom.build.finalName}.jar</jar>
			            <errTitle>Figurate</errTitle>
			            <jre>1.6</jre>
			          </configuration>
			        </execution>
			      </executions>
            </plugin>
             -->
		</plugins>
	</build>
</project>
